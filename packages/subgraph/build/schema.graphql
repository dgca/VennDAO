type DaoFeeUpdated @entity(immutable: true) {
  id: Bytes!
  newFee: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OrderFundsTransferred @entity(immutable: true) {
  id: Bytes!
  orderId: BigInt! # uint256
  recipient: Bytes! # address
  amount: BigInt! # uint256
  daoAmount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OrderPlaced @entity(immutable: true) {
  id: Bytes!
  orderId: BigInt! # uint256
  productId: BigInt! # uint256
  placedBy: Bytes! # address
  quantity: BigInt! # uint256
  refundRecipient: Bytes! # address
  orderTotal: BigInt! # uint256
  status: Int! # uint8
  createdAt: BigInt! # uint256
  publicFields: [String!]! # string[]
  encryptedFields: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OrderStatusUpdated @entity(immutable: true) {
  id: Bytes!
  orderId: BigInt! # uint256
  newStatus: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VendorRefundIssued @entity(immutable: true) {
  id: Bytes!
  orderId: BigInt! # uint256
  vendor: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VennDAOOrdersInitialized @entity(immutable: true) {
  id: Bytes!
  productsContract: Bytes! # address
  vendorsContract: Bytes! # address
  initialOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
